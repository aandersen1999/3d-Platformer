//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.2
//     from Assets/PlayerController.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerController : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerController()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerController"",
    ""maps"": [
        {
            ""name"": ""GamePlayer"",
            ""id"": ""b91c5081-b746-4290-ade3-3b8f4052aeff"",
            ""actions"": [
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""f684adcf-655e-4b6c-8afb-05f14473ab6a"",
                    ""expectedControlType"": ""Stick"",
                    ""processors"": ""StickDeadzone"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""08954685-8118-437d-9103-b00405240078"",
                    ""expectedControlType"": ""Stick"",
                    ""processors"": ""StickDeadzone(min=0.2)"",
                    ""interactions"": ""AnalogStickRotation,Press"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""4889e4e9-260e-4679-8556-4a2e0362da09"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""1333b1a2-f13a-42fa-825f-60dfeb7cb24c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CenterCam"",
                    ""type"": ""Button"",
                    ""id"": ""60c35fa1-2b20-4831-9f5e-603404683439"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Crouch"",
                    ""type"": ""Button"",
                    ""id"": ""bc201bd2-823b-48d4-91ab-777e87861797"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""526cbb75-6069-4518-8667-e746ed4077dc"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""726499ba-bb58-4eac-8207-9f25bcd6df57"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c1ad4bdf-8a32-49ed-aa16-9a26a705431c"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8e0ea7b3-ce87-47ea-a237-2ab733659409"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bdac2dc6-b7f0-4f81-a450-61811f27f6e0"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CenterCam"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""745c0b7d-1a0f-4e8d-bbc8-513c7357cab0"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // GamePlayer
        m_GamePlayer = asset.FindActionMap("GamePlayer", throwIfNotFound: true);
        m_GamePlayer_Look = m_GamePlayer.FindAction("Look", throwIfNotFound: true);
        m_GamePlayer_Move = m_GamePlayer.FindAction("Move", throwIfNotFound: true);
        m_GamePlayer_Jump = m_GamePlayer.FindAction("Jump", throwIfNotFound: true);
        m_GamePlayer_Attack = m_GamePlayer.FindAction("Attack", throwIfNotFound: true);
        m_GamePlayer_CenterCam = m_GamePlayer.FindAction("CenterCam", throwIfNotFound: true);
        m_GamePlayer_Crouch = m_GamePlayer.FindAction("Crouch", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // GamePlayer
    private readonly InputActionMap m_GamePlayer;
    private IGamePlayerActions m_GamePlayerActionsCallbackInterface;
    private readonly InputAction m_GamePlayer_Look;
    private readonly InputAction m_GamePlayer_Move;
    private readonly InputAction m_GamePlayer_Jump;
    private readonly InputAction m_GamePlayer_Attack;
    private readonly InputAction m_GamePlayer_CenterCam;
    private readonly InputAction m_GamePlayer_Crouch;
    public struct GamePlayerActions
    {
        private @PlayerController m_Wrapper;
        public GamePlayerActions(@PlayerController wrapper) { m_Wrapper = wrapper; }
        public InputAction @Look => m_Wrapper.m_GamePlayer_Look;
        public InputAction @Move => m_Wrapper.m_GamePlayer_Move;
        public InputAction @Jump => m_Wrapper.m_GamePlayer_Jump;
        public InputAction @Attack => m_Wrapper.m_GamePlayer_Attack;
        public InputAction @CenterCam => m_Wrapper.m_GamePlayer_CenterCam;
        public InputAction @Crouch => m_Wrapper.m_GamePlayer_Crouch;
        public InputActionMap Get() { return m_Wrapper.m_GamePlayer; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GamePlayerActions set) { return set.Get(); }
        public void SetCallbacks(IGamePlayerActions instance)
        {
            if (m_Wrapper.m_GamePlayerActionsCallbackInterface != null)
            {
                @Look.started -= m_Wrapper.m_GamePlayerActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_GamePlayerActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_GamePlayerActionsCallbackInterface.OnLook;
                @Move.started -= m_Wrapper.m_GamePlayerActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_GamePlayerActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_GamePlayerActionsCallbackInterface.OnMove;
                @Jump.started -= m_Wrapper.m_GamePlayerActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_GamePlayerActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_GamePlayerActionsCallbackInterface.OnJump;
                @Attack.started -= m_Wrapper.m_GamePlayerActionsCallbackInterface.OnAttack;
                @Attack.performed -= m_Wrapper.m_GamePlayerActionsCallbackInterface.OnAttack;
                @Attack.canceled -= m_Wrapper.m_GamePlayerActionsCallbackInterface.OnAttack;
                @CenterCam.started -= m_Wrapper.m_GamePlayerActionsCallbackInterface.OnCenterCam;
                @CenterCam.performed -= m_Wrapper.m_GamePlayerActionsCallbackInterface.OnCenterCam;
                @CenterCam.canceled -= m_Wrapper.m_GamePlayerActionsCallbackInterface.OnCenterCam;
                @Crouch.started -= m_Wrapper.m_GamePlayerActionsCallbackInterface.OnCrouch;
                @Crouch.performed -= m_Wrapper.m_GamePlayerActionsCallbackInterface.OnCrouch;
                @Crouch.canceled -= m_Wrapper.m_GamePlayerActionsCallbackInterface.OnCrouch;
            }
            m_Wrapper.m_GamePlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Attack.started += instance.OnAttack;
                @Attack.performed += instance.OnAttack;
                @Attack.canceled += instance.OnAttack;
                @CenterCam.started += instance.OnCenterCam;
                @CenterCam.performed += instance.OnCenterCam;
                @CenterCam.canceled += instance.OnCenterCam;
                @Crouch.started += instance.OnCrouch;
                @Crouch.performed += instance.OnCrouch;
                @Crouch.canceled += instance.OnCrouch;
            }
        }
    }
    public GamePlayerActions @GamePlayer => new GamePlayerActions(this);
    public interface IGamePlayerActions
    {
        void OnLook(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnCenterCam(InputAction.CallbackContext context);
        void OnCrouch(InputAction.CallbackContext context);
    }
}
